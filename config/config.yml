stackName: cumulus-api-test2
stage: dev
buildApiGateway: true

vpc:
  id: vpc-5aa75d3c
  availabilityZones: us-east-1e
  subnetId: subnet-41e23a7d

buckets:
  private: cumulus-private
  public: cumulus-public
  protected: cumulus-protected
  internal: cumulus-internal

ecs:
  maxInstances: 5
  desiredInstances: 1
  keyPairName: cumulus-scisco
  instanceType: t2.micro

sqs:
  - name: PDRsQueue # queue for list of PDRs to be parsed
    visibilityTimeout: 100
    retry: 3
  - name: GranulesQueue # queue for Granule files to be ingested
    visibilityTimeout: 1000
    retry: 3
  - name: ProcessingQuque # queue for running process ECS tasks
    visibilityTimeout: 5000
    retry: 2

dynamos:
  - name: CollectionsTable
    read: 5
    write: 5
    elasticsearch: true
    attributes:
      - name: collectionName
        type: S
    schema:
      - name: collectionName
        type: HASH

  - name: GranulesTable
    read: 100
    write: 100
    elasticsearch: true
    attributes:
      - name: granuleId
        type: S
      - name: collectionName
        type: S
    schema:
      - name: collectionName
        type: HASH
      - name: granuleId
        type: RANGE

  - name: InvokeTable
    read: 5
    write: 5
    elasticsearch: true
    attributes:
      - name: collectionName
        type: S
    schema:
      - name: collectionName
        type: HASH

  - name: PDRsTable
    read: 5
    write: 5
    elasticsearch: true
    attributes:
      - name: pdrName
        type: S
    schema:
      - name: pdrName
        type: HASH

lambdas:
  - name: pdrParser
    handler: pdr.parsePdrsHandler
    timeout: 300
    ecs: true # to be deployed as a service on ECS
    count: 0 # number of service instances running on ECS for this lambda
    image: cumulus-docker-dev-lambdarunner

  - name: ingestGranules
    handler: pdr.ingestGranulesHandler
    timeout: 300
    ecs: true
    image: cumulus-docker-dev-lambdarunner
    count: 0
    commands:
      - --eventJson
      - '{ \"concurrency\": 4 }'

  - name: pdrDiscoverer
    handler: pdr.discoverPdrHandler
    timeout: 300
    broadcast: true

  - name: archive
    handler: archive.handler
    timeout: 300
    broadcast: true

  - name: dispatcher
    handler: dispatcher.handler
    timeout: 300
    broadcast: true

  - name: statsSummary
    handler: stats.summary
    timeout: 300
    apiGateway:
      path: stats/summary
      method: get
      cors: true

  - name: statsSummaryGrouped
    handler: stats.summaryGrouped
    timeout: 300
    apiGateway:
      path: stats/summary/grouped
      method: get
      cors: true

  - name: getErrorCounts
    handler: errors.counts
    timeout: 300
    apiGateway:
      path: stats/errors
      method: get
      cors: true

  - name: listErrors
    handler: errors.list
    timeout: 300
    apiGateway:
      path: errors
      method: get
      cors: true

  - name: listGranules
    handler: granules.list
    timeout: 300
    apiGateway:
      path: granules
      method: get
      cors: true

  - name: listCollectionGranules
    handler: granules.list
    timeout: 300
    apiGateway:
      path: granules/{collection}
      method: get
      cors: true

  - name: getGranules
    handler: granules.get
    timeout: 300
    apiGateway:
      path: granules/{collection}/{granuleName}
      method: get
      cors: true

  - name: listCollections
    handler: collections.list
    timeout: 300
    apiGateway:
      path: collections
      method: get
      cors: true

  - name: getCollection
    handler: collections.get
    timeout: 300
    apiGateway:
      path: collections/{short_name}
      method: get
      cors: true

  - name: postCollection
    handler: collections.post
    timeout: 300
    apiGateway:
      path: collections
      method: post
      cors: true

  - name: putCollection
    handler: collections.put
    timeout: 300
    apiGateway:
      path: collections
      method: put
      cors: true

  - name: listPDRs
    handler: pdr-handlers.list
    timeout: 300
    apiGateway:
      path: pdrs
      method: get
      cors: true

  - name: getPDRs
    handler: pdr-handlers.get
    timeout: 300
    apiGateway:
      path: pdrs/{pdrName}
      method: get
      cors: true
